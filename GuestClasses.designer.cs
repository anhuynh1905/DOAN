#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DOAN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatabaseRoom1")]
	public partial class GuestClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertroom(room instance);
    partial void Updateroom(room instance);
    partial void Deleteroom(room instance);
    #endregion
		
		public GuestClassesDataContext() : 
				base(global::DOAN.Properties.Settings.Default.DatabaseRoom1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GuestClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GuestClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GuestClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GuestClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<room> rooms
		{
			get
			{
				return this.GetTable<room>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cid;
		
		private string _cfname;
		
		private string _clname;
		
		private long _mobile;
		
		private System.DateTime _checkin;
		
		private System.Nullable<System.DateTime> _checkout;
		
		private string _chekout;
		
		private int _roomid;
		
		private EntityRef<room> _room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OncfnameChanging(string value);
    partial void OncfnameChanged();
    partial void OnclnameChanging(string value);
    partial void OnclnameChanged();
    partial void OnmobileChanging(long value);
    partial void OnmobileChanged();
    partial void OncheckinChanging(System.DateTime value);
    partial void OncheckinChanged();
    partial void OncheckoutChanging(System.Nullable<System.DateTime> value);
    partial void OncheckoutChanged();
    partial void OnchekoutChanging(string value);
    partial void OnchekoutChanged();
    partial void OnroomidChanging(int value);
    partial void OnroomidChanged();
    #endregion
		
		public customer()
		{
			this._room = default(EntityRef<room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cfname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string cfname
		{
			get
			{
				return this._cfname;
			}
			set
			{
				if ((this._cfname != value))
				{
					this.OncfnameChanging(value);
					this.SendPropertyChanging();
					this._cfname = value;
					this.SendPropertyChanged("cfname");
					this.OncfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string clname
		{
			get
			{
				return this._clname;
			}
			set
			{
				if ((this._clname != value))
				{
					this.OnclnameChanging(value);
					this.SendPropertyChanging();
					this._clname = value;
					this.SendPropertyChanged("clname");
					this.OnclnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="BigInt NOT NULL")]
		public long mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkin", DbType="DateTime NOT NULL")]
		public System.DateTime checkin
		{
			get
			{
				return this._checkin;
			}
			set
			{
				if ((this._checkin != value))
				{
					this.OncheckinChanging(value);
					this.SendPropertyChanging();
					this._checkin = value;
					this.SendPropertyChanged("checkin");
					this.OncheckinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkout", DbType="Date")]
		public System.Nullable<System.DateTime> checkout
		{
			get
			{
				return this._checkout;
			}
			set
			{
				if ((this._checkout != value))
				{
					this.OncheckoutChanging(value);
					this.SendPropertyChanging();
					this._checkout = value;
					this.SendPropertyChanged("checkout");
					this.OncheckoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chekout", DbType="Char(3)")]
		public string chekout
		{
			get
			{
				return this._chekout;
			}
			set
			{
				if ((this._chekout != value))
				{
					this.OnchekoutChanging(value);
					this.SendPropertyChanging();
					this._chekout = value;
					this.SendPropertyChanged("chekout");
					this.OnchekoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomid", DbType="Int NOT NULL")]
		public int roomid
		{
			get
			{
				return this._roomid;
			}
			set
			{
				if ((this._roomid != value))
				{
					if (this._room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroomidChanging(value);
					this.SendPropertyChanging();
					this._roomid = value;
					this.SendPropertyChanged("roomid");
					this.OnroomidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_customer", Storage="_room", ThisKey="roomid", OtherKey="roomid", IsForeignKey=true)]
		public room room
		{
			get
			{
				return this._room.Entity;
			}
			set
			{
				room previousValue = this._room.Entity;
				if (((previousValue != value) 
							|| (this._room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._room.Entity = null;
						previousValue.customers.Remove(this);
					}
					this._room.Entity = value;
					if ((value != null))
					{
						value.customers.Add(this);
						this._roomid = value.roomid;
					}
					else
					{
						this._roomid = default(int);
					}
					this.SendPropertyChanged("room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rooms")]
	public partial class room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _roomid;
		
		private string _roomNo;
		
		private string _roomType;
		
		private string _bed;
		
		private long _price;
		
		private string _booked;
		
		private EntitySet<customer> _customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroomidChanging(int value);
    partial void OnroomidChanged();
    partial void OnroomNoChanging(string value);
    partial void OnroomNoChanged();
    partial void OnroomTypeChanging(string value);
    partial void OnroomTypeChanged();
    partial void OnbedChanging(string value);
    partial void OnbedChanged();
    partial void OnpriceChanging(long value);
    partial void OnpriceChanged();
    partial void OnbookedChanging(string value);
    partial void OnbookedChanged();
    #endregion
		
		public room()
		{
			this._customers = new EntitySet<customer>(new Action<customer>(this.attach_customers), new Action<customer>(this.detach_customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int roomid
		{
			get
			{
				return this._roomid;
			}
			set
			{
				if ((this._roomid != value))
				{
					this.OnroomidChanging(value);
					this.SendPropertyChanging();
					this._roomid = value;
					this.SendPropertyChanged("roomid");
					this.OnroomidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomNo", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string roomNo
		{
			get
			{
				return this._roomNo;
			}
			set
			{
				if ((this._roomNo != value))
				{
					this.OnroomNoChanging(value);
					this.SendPropertyChanging();
					this._roomNo = value;
					this.SendPropertyChanged("roomNo");
					this.OnroomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomType", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string roomType
		{
			get
			{
				return this._roomType;
			}
			set
			{
				if ((this._roomType != value))
				{
					this.OnroomTypeChanging(value);
					this.SendPropertyChanging();
					this._roomType = value;
					this.SendPropertyChanged("roomType");
					this.OnroomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bed", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string bed
		{
			get
			{
				return this._bed;
			}
			set
			{
				if ((this._bed != value))
				{
					this.OnbedChanging(value);
					this.SendPropertyChanging();
					this._bed = value;
					this.SendPropertyChanged("bed");
					this.OnbedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="BigInt NOT NULL")]
		public long price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booked", DbType="NChar(3)")]
		public string booked
		{
			get
			{
				return this._booked;
			}
			set
			{
				if ((this._booked != value))
				{
					this.OnbookedChanging(value);
					this.SendPropertyChanging();
					this._booked = value;
					this.SendPropertyChanged("booked");
					this.OnbookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_customer", Storage="_customers", ThisKey="roomid", OtherKey="roomid")]
		public EntitySet<customer> customers
		{
			get
			{
				return this._customers;
			}
			set
			{
				this._customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.room = this;
		}
		
		private void detach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.room = null;
		}
	}
}
#pragma warning restore 1591
